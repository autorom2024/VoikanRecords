name: Build Voikan Records (all-in-one)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
  # Якщо хочеш автопублікацію у Release — пуш тега vX.Y.Z
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-windows:
    runs-on: windows-latest

    env:
      # Забороняємо збірки з вихідників — тільки готові wheels
      PIP_NO_BUILD_ISOLATION: "1"
      PIP_ONLY_BINARY: ":all:"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Upgrade pip & build tools
        run: |
          python -m pip install -U pip setuptools wheel
          pip --version
          python -V

      # ВСТАНОВЛЮЄМО TORCH CU118 ОКРЕМО (не з requirements.txt)
      - name: Install PyTorch CUDA 11.8 wheels
        run: |
          pip install --index-url https://download.pytorch.org/whl/cu118 ^
            torch==2.7.1+cu118 torchvision==0.22.1+cu118 torchaudio==2.7.1+cu118
          python -c "import torch; print('Torch version:', torch.__version__)"

      # Готуємо requirements без torch/torchaudio/torchvision
      - name: Prepare requirements (filter out torch*)
        shell: pwsh
        run: |
          if (Test-Path requirements.txt) {
            Get-Content requirements.txt |
              Where-Object { $_ -notmatch '^(torch|torchaudio|torchvision)\b' } |
              Set-Content req_no_torch.txt
            Write-Host '=== req_no_torch.txt ==='
            Get-Content req_no_torch.txt
          } else {
            '' | Out-File req_no_torch.txt -Encoding utf8
          }

      - name: Install project dependencies (wheels only)
        run: |
          if exist req_no_torch.txt (
            pip install --only-binary=:all: -r req_no_torch.txt
          )
          pip freeze

      # FFmpeg (за потреби рантайму; у .exe не включається)
      - name: Install FFmpeg (Chocolatey)
        run: choco install ffmpeg -y --no-progress

      - name: Install PyInstaller
        run: pip install pyinstaller

      - name: Build onefile exe
        run: |
          pyinstaller --clean --noconfirm --windowed --onefile ^
            --name Voikan ^
            --icon=assets/icons/video.ico ^
            main.py

      - name: Show binary size
        shell: pwsh
        run: |
          $f = Get-Item dist\Voikan.exe
          Write-Host ("Voikan.exe size: {0:N2} MB" -f ($f.Length/1MB))

      - name: Upload artifact (Voikan.exe)
        uses: actions/upload-artifact@v4
        with:
          name: Voikan.exe
          path: dist/Voikan.exe

      # Публікуємо у Release ТІЛЬКИ коли пушиш тег vX.Y.Z
      - name: Publish to GitHub Release (tag push only)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: dist/Voikan.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


