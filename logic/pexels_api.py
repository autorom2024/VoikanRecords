# logic/pexels_api.py

import os, requests, time

PEXELS_URL = "https://api.pexels.com/v1/search"

def pexels_search(prompt, api_key, outdir, count, orientation, quality, media_type, cancel_event, status_q):
    """
    prompt       - –ø–æ—à—É–∫–æ–≤–∏–π –∑–∞–ø–∏—Ç
    api_key      - Pexels API –∫–ª—é—á
    outdir       - –∫—É–¥–∏ –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏
    count        - –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤
    orientation  - "–ë—É–¥—å-—è–∫–∞" | "–ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å" | "–í–µ—Ä—Ç–∏–∫–∞–ª—å" | "–ö–≤–∞–¥—Ä–∞—Ç"
    quality      - "HD"|"FullHD"|"2K"|"4K"
    media_type   - "–§–æ—Ç–æ"|"–í—ñ–¥–µ–æ"
    cancel_event - threading.Event
    status_q     - —á–µ—Ä–≥–∞ –¥–ª—è –ª–æ–≥—ñ–≤
    """
    os.makedirs(outdir, exist_ok=True)
    headers = {"Authorization": api_key}
    params = {"query": prompt, "per_page": count}

    if orientation != "–ë—É–¥—å-—è–∫–∞":
        params["orientation"] = orientation.lower()

    if media_type == "–§–æ—Ç–æ":
        url = PEXELS_URL
    else:
        url = "https://api.pexels.com/videos/search"

    status_q.put({"msg": f"üîµ Pexels: –ø–æ—à—É–∫ –∑–∞ –ø—Ä–æ–º—Ç–æ–º '{prompt}'‚Ä¶"})

    resp = requests.get(url, headers=headers, params=params)
    if resp.status_code != 200:
        status_q.put({"msg": f"‚ùå Pexels error {resp.status_code}"})
        return

    data = resp.json()
    items = data.get("photos" if media_type=="–§–æ—Ç–æ" else "videos", [])

    for i, item in enumerate(items):
        if cancel_event.is_set():
            status_q.put({"msg": "üü° Pexels: –∑—É–ø–∏–Ω–µ–Ω–æ"})
            return

        if media_type == "–§–æ—Ç–æ":
            file_url = item["src"]["original"]
            fname = f"pexels_{i+1}.jpg"
        else:
            file_url = item["video_files"][0]["link"]
            fname = f"pexels_{i+1}.mp4"

        path = os.path.join(outdir, fname)
        r = requests.get(file_url)
        with open(path, "wb") as f: f.write(r.content)

        status_q.put({"msg": f"‚úÖ Pexels: –∑–±–µ—Ä–µ–∂–µ–Ω–æ {path}"})
        time.sleep(0.2)

    status_q.put({"msg": "üü¢ Pexels: –ø–æ—à—É–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"})
